package morgan.SurveyInference.Linker;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JPanel;

/**
 * The Network Selection Dialog is used to create a list of potential networks that could be
 * outputted.
 * @author gmorgan
 *
 */
public class NetworkSelectionDialog extends Dialog implements ActionListener {

	/**
	 * A serial version ID auto-generated by Eclipse
	 */
	private static final long serialVersionUID = -6903478326927861334L;
	
	JButton submit;
	ArrayList<NetworkDefinition> definitions = new ArrayList<NetworkDefinition>();

	public NetworkSelectionDialog(Frame arg0, HashMap<String, IdentifiedNode> nodes) {
		super(arg0);
		this.setModal(true);
		this.setTitle("Select Networks to Output");
		ArrayList<String> uniqueNodeTypes = new ArrayList<String>();
		for(IdentifiedNode n : nodes.values()) {
			if(!uniqueNodeTypes.contains(n.type)) {
				uniqueNodeTypes.add(n.type);
			}
		}
		//if(nodeTypes)
		JPanel contentPanel = UsefulGUIMethods.getPageAxisJPanel();
		contentPanel.add(NetworkDefinition.getHeaderPanel());
		for(int i = 0; i < uniqueNodeTypes.size(); ++i) {
			for(int j = i+1; j < uniqueNodeTypes.size(); ++j) {
				String source = uniqueNodeTypes.get(i);
				String sink = uniqueNodeTypes.get(j);
				String tempName = source + " x " + sink;
				
				NetworkDefinition d = new NetworkDefinition(tempName, source, sink);
				definitions.add(d);
				contentPanel.add(d.formatNetworkDefinitionPanel());
				//System.out.println(uniqueNodeTypes.get(i) + " -> " + uniqueNodeTypes.get(j));
			}
		}
		submit = new JButton("Submit");
		submit.addActionListener(this);
		JPanel submitPanel = UsefulGUIMethods.getLineAxisJPanel();
		submitPanel.add(Box.createGlue());
		submitPanel.add(submit);
		submitPanel.add(Box.createGlue());
		contentPanel.add(Box.createVerticalStrut(10));
		contentPanel.add(Box.createGlue());
		contentPanel.add(submitPanel);
		contentPanel.add(Box.createVerticalStrut(10));
		this.add(contentPanel);
		this.pack();
	}

	public void actionPerformed(ActionEvent e) {
		this.setVisible(false);
	}

}
